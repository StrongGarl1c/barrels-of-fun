{"version":3,"sources":["barrel3.png","Barrel.js","LeaderBoard.js","Difficulty.js","Options.js","StartingScreen.js","functions/randomPosition.js","functions/barrelsWithRandomPosition.js","functions/checkCollision.js","Map.js","index.js"],"names":["Barrel","position","go","name","animation","src","image","alt","onClick","style","top","left","className","LeaderBoard","props","useState","top20","setTop20","useEffect","id","map","user","score","_id","displayTop20","Difficulty","border","easy","gameDifficulty","borders","setDifficulty","normal","hard","changeDisplay","Options","display","setDisplay","disabled","changeOptions","StartingScreen","displayOptions","setDisplayOptions","bool","showTop20","playerName","p","prompt","setName","setVisibility","shuffle","randomPosition","Math","floor","random","barrelsWithRandomPosition","counter","array","i","barrel","recursiveRandomPosition","currentBarrel","some","checkCollision","push","Map","startingBarrels","setStartingBarrels","playAnimation","setPlayAnimation","setAnimation","reset","setReset","gameStatus","setGameStatus","gamesStart","setGameStart","status","setStatus","gameOver","setGameOver","setStyle","player","setPlayer","visibility","hidden","setHidden","difficulty","setShowTop20","setPosition","setNewPosition","prevState","length","setTimeout","checkGuess","e","parseInt","target","backgroundColor","parentElement","firstChild","a","fetch","method","headers","body","JSON","stringify","response","json","data","console","error","confirm","resetGame","diff","obj","getData","useCallback","res","item","index","button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60443984.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/barrel3.2efe95e2.png\";","import image from './barrel3.png';\r\n\r\nfunction Barrel({ position, go, name, animation }) {\r\n  return (\r\n    <img\r\n      src={image}\r\n      alt=\"barrel\"\r\n      onClick={go}\r\n      style={{\r\n        top: position.top,\r\n        left: position.left,\r\n        animation: animation,\r\n      }}\r\n      className=\"barrel\"\r\n      name={name}\r\n    ></img>\r\n  );\r\n}\r\n\r\nexport default Barrel;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction LeaderBoard(props) {\r\n  const [top20, setTop20] = useState(props.top);\r\n\r\n  useEffect(() => {\r\n    setTop20(props.top);\r\n  }, [props.top]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Top 20</h2>\r\n      <ul id=\"leader-board\">\r\n        {top20.map((user) => {\r\n          return (\r\n            <li key={user._id}>\r\n              <b>{user.name}</b> {user.score}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <button onClick={() => props.displayTop20(false)}>Назад</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LeaderBoard;\r\n","function Difficulty(props) {\r\n  const border = 'solid black 3px';\r\n  return (\r\n    <div className='starting-screen'>\r\n      <h2>Сложность</h2>\r\n      <div className='difficulty'>\r\n        <button\r\n          style={props.style.easy}\r\n          onClick={() => {\r\n            props.gameDifficulty(3);\r\n            props.borders({ easy: { border: border } });\r\n            props.setDifficulty(1);\r\n          }}\r\n        >\r\n          Легкая\r\n        </button>\r\n        <button\r\n          style={props.style.normal}\r\n          onClick={() => {\r\n            props.gameDifficulty(6);\r\n            props.borders({ normal: { border: border } });\r\n            props.setDifficulty(2);\r\n          }}\r\n        >\r\n          Нормальная\r\n        </button>\r\n        <button\r\n          style={props.style.hard}\r\n          onClick={() => {\r\n            props.gameDifficulty(10);\r\n            props.borders({ hard: { border: border } });\r\n            props.setDifficulty(3);\r\n          }}\r\n        >\r\n          Сложная\r\n        </button>\r\n        <button onClick={() => props.changeDisplay()}>Назад</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Difficulty;\r\n","import { useState } from 'react';\r\nimport Difficulty from './Difficulty';\r\n\r\nfunction Options(props) {\r\n  const [display, setDisplay] = useState(true);\r\n\r\n  function changeDisplay() {\r\n    setDisplay(true);\r\n  }\r\n\r\n  const render = (\r\n    <div className='starting-screen'>\r\n      <h2>Опции</h2>\r\n      <button onClick={() => setDisplay(false)}>Сложность</button>\r\n      <button disabled>Звук</button>\r\n      <button disabled>Изображение</button>\r\n      <button onClick={() => props.changeOptions(false)}>Назад</button>\r\n    </div>\r\n  );\r\n\r\n  return display ? (\r\n    render\r\n  ) : (\r\n    <Difficulty\r\n      changeDisplay={changeDisplay}\r\n      gameDifficulty={props.gameDifficulty}\r\n      borders={props.borders}\r\n      style={props.style}\r\n      setDifficulty={props.setDifficulty}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Options;\r\n","import { useState } from 'react';\r\nimport LeaderBoard from './LeaderBoard';\r\nimport Options from './Options';\r\n\r\nfunction StartingScreen(props) {\r\n  const [displayOptions, setDisplayOptions] = useState(false);\r\n\r\n  function changeOptions(bool) {\r\n    setDisplayOptions(bool);\r\n  }\r\n\r\n  function render() {\r\n    if (displayOptions) {\r\n      return (\r\n        <Options\r\n          changeOptions={changeOptions}\r\n          gameDifficulty={props.gameDifficulty}\r\n          borders={props.borders}\r\n          style={props.style}\r\n          setDifficulty={props.setDifficulty}\r\n        />\r\n      );\r\n    } else if (props.showTop20) {\r\n      return <LeaderBoard top={props.top} displayTop20={props.displayTop20} />;\r\n    } else {\r\n      return (\r\n        <div className='starting-screen'>\r\n          <button\r\n            onClick={() => {\r\n              let playerName;\r\n              if (!props.playerName) {\r\n                const p = prompt('Введите ник');\r\n                p ? (playerName = p) : (playerName = 'Гость');\r\n                props.setName(playerName);\r\n              }\r\n              props.setVisibility(true);\r\n              props.shuffle();\r\n            }}\r\n          >\r\n            Начать игру\r\n          </button>\r\n          <button onClick={() => props.displayTop20(true)}>Топ 20</button>\r\n          <button onClick={() => changeOptions(true)}>Опции</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  return render();\r\n}\r\n\r\nexport default StartingScreen;\r\n","export default function randomPosition() {\r\n  return {\r\n    top: Math.floor(Math.random() * 450),\r\n    left: Math.floor(Math.random() * 450),\r\n  };\r\n}\r\n","import checkCollision from './checkCollision';\r\nimport randomPosition from './randomPosition';\r\n\r\nexport default function barrelsWithRandomPosition(counter) {\r\n  const array = [];\r\n  for (let i = 0; i < counter; i++) {\r\n    let barrel = randomPosition();\r\n    (function recursiveRandomPosition() {\r\n      if (checkCollision(array, barrel)) {\r\n        barrel = randomPosition();\r\n        recursiveRandomPosition();\r\n      } else {\r\n        array.push(barrel);\r\n      }\r\n    })();\r\n  }\r\n  return array;\r\n}\r\n","export default function checkCollision(array, currentBarrel) {\r\n  const width = 50;\r\n  const height = 50;\r\n  if (\r\n    array.some((barrel) => {\r\n      return (\r\n        currentBarrel.left < barrel.left + width &&\r\n        currentBarrel.left + width > barrel.left &&\r\n        currentBarrel.top < barrel.top + height &&\r\n        currentBarrel.top + height > barrel.top\r\n      );\r\n    })\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport './style.css';\r\nimport Barrel from './Barrel';\r\nimport StartingScreen from './StartingScreen';\r\nimport LeaderBoard from './LeaderBoard';\r\nimport barrelsWithRandomPosition from './functions/barrelsWithRandomPosition';\r\n\r\nfunction Map() {\r\n  const [startingBarrels, setStartingBarrels] = useState(3);\r\n  const [playAnimation, setPlayAnimation] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const [reset, setReset] = useState(false);\r\n  const [gameStatus, setGameStatus] = useState(false);\r\n  const [gamesStart, setGameStart] = useState(false);\r\n  const [status, setStatus] = useState('Найди веселую бочку!');\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [style, setStyle] = useState({\r\n    easy: { border: 'solid black 3px' },\r\n    normal: {},\r\n    hard: {},\r\n  });\r\n  const [player, setPlayer] = useState({\r\n    name: '',\r\n    score: 0,\r\n  });\r\n  const [hidden, setHidden] = useState({\r\n    visibility: 'hidden',\r\n  });\r\n  const [difficulty, setDifficulty] = useState(1);\r\n  const [top20, setTop20] = useState([]);\r\n  const [showTop20, setShowTop20] = useState(false);\r\n  const [position, setPosition] = useState(\r\n    barrelsWithRandomPosition(startingBarrels),\r\n  );\r\n\r\n  function setNewPosition() {\r\n    setPosition((prevState) => barrelsWithRandomPosition(prevState.length));\r\n  }\r\n\r\n  function shuffle() {\r\n    setPlayAnimation(true);\r\n    setGameStart(true);\r\n    setStatus('Найди веселую бочку!');\r\n    for (let i = 0; i < startingBarrels; i++) {\r\n      setTimeout(setNewPosition, (3 + i) * 1000);\r\n    }\r\n    setTimeout(() => setGameStatus(true), (startingBarrels + 3) * 1000);\r\n    setTimeout(() => setPlayAnimation(false), 3000);\r\n  }\r\n\r\n  function checkGuess(e) {\r\n    // if guess is correct\r\n    if (parseInt(e.target.name) === 0) {\r\n      setStatus('Угадал!');\r\n      setGameStatus(false);\r\n      // to do add a new barrel with no collission\r\n      setPosition((prevState) => [\r\n        ...prevState,\r\n        {\r\n          top: Math.floor(Math.random() * 450),\r\n          left: Math.floor(Math.random() * 450),\r\n        },\r\n      ]);\r\n      setPlayer((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          score: (player.score += (position.length - 1) * difficulty),\r\n        };\r\n      });\r\n      shuffle();\r\n      // if guess is wrong\r\n    } else {\r\n      e.target.style.backgroundColor = 'red';\r\n      e.target.parentElement.firstChild.style.backgroundColor = 'yellow';\r\n      setStatus('Ты проиграл!');\r\n      setGameStatus(false);\r\n      setGameOver(true);\r\n      (async function () {\r\n        try {\r\n          const response = await fetch('/api', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(player),\r\n          });\r\n          const data = await response.json();\r\n          setTop20(data);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      })();\r\n      setTimeout(() => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        if (confirm('Показать топ 20?')) {\r\n          setShowTop20(true);\r\n        }\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  function resetGame() {\r\n    setGameStatus(false);\r\n    setGameStart(false);\r\n    setPosition(barrelsWithRandomPosition(startingBarrels));\r\n    setStatus('Найди веселую бочку!');\r\n    setReset(!reset);\r\n    setVisibility(false);\r\n    setPlayer((prevState) => {\r\n      return { ...prevState, score: 0 };\r\n    });\r\n    setGameOver(false);\r\n    setShowTop20(false);\r\n  }\r\n\r\n  function gameDifficulty(diff) {\r\n    setStartingBarrels(diff);\r\n  }\r\n\r\n  function button() {\r\n    if (gameStatus || gameOver) {\r\n      return <button onClick={resetGame}>Новая Игра</button>;\r\n    }\r\n  }\r\n\r\n  function borders(obj) {\r\n    setStyle(obj);\r\n  }\r\n\r\n  function setName(name) {\r\n    setPlayer((prevState) => {\r\n      return { ...prevState, name: name };\r\n    });\r\n  }\r\n\r\n  function setVisibility(bool) {\r\n    return bool\r\n      ? setHidden({ visibility: '' })\r\n      : setHidden({ visibility: 'hidden' });\r\n  }\r\n\r\n  const getData = useCallback(async () => {\r\n    try {\r\n      const res = await fetch('/api');\r\n      const data = await res.json();\r\n      setTop20(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, []);\r\n\r\n  function displayTop20(bool) {\r\n    setShowTop20(bool);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPosition(barrelsWithRandomPosition(startingBarrels));\r\n  }, [startingBarrels]);\r\n\r\n  useEffect(() => {\r\n    playAnimation\r\n      ? setAnimation('blink 0.5s 6 alternate ease-in-out')\r\n      : setAnimation('');\r\n  }, [playAnimation]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  function render() {\r\n    if (showTop20) {\r\n      return <LeaderBoard top={top20} displayTop20={displayTop20} />;\r\n    } else if (gamesStart) {\r\n      return position.map((item, index) =>\r\n        index === 0 ? (\r\n          <Barrel\r\n            key={index}\r\n            position={position[index]}\r\n            go={gameStatus ? checkGuess : null}\r\n            name={index}\r\n            animation={animation}\r\n          />\r\n        ) : (\r\n          <Barrel\r\n            key={index}\r\n            position={position[index]}\r\n            go={gameStatus ? checkGuess : null}\r\n            name={index}\r\n          />\r\n        ),\r\n      );\r\n    } else {\r\n      return (\r\n        <StartingScreen\r\n          shuffle={shuffle}\r\n          gameDifficulty={gameDifficulty}\r\n          borders={borders}\r\n          style={style}\r\n          setName={setName}\r\n          setVisibility={setVisibility}\r\n          playerName={player.name}\r\n          setDifficulty={setDifficulty}\r\n          top={top20}\r\n          showTop20={showTop20}\r\n          displayTop20={displayTop20}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>{status}</h2>\r\n      <h2 style={hidden}>{`${player.name} Очки: ${player.score}`}</h2>\r\n      <div id='map'>{render()}</div>\r\n      {button()}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Map from './Map';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Map />\r\n  </React.StrictMode>,\r\n  document.getElementById('grid'),\r\n);\r\n"],"sourceRoot":""}