{"version":3,"sources":["assets/barrel3.png","components/Barrel.js","components/LeaderBoard.js","components/Difficulty.js","components/Options.js","components/StartingScreen.js","functions/checkCollision.js","functions/randomPosition.js","functions/newBarrelAtRandomPosition.js","functions/barrelsWithRandomPosition.js","api/api.js","components/Button.js","components/Map.js","index.js"],"names":["Barrel","position","go","name","animation","src","image","alt","onClick","style","top","left","className","LeaderBoard","props","useState","top20","setTop20","useEffect","id","map","user","score","_id","displayTop20","Difficulty","border","easy","startingBarrels","borders","setDifficulty","normal","hard","changeDisplay","Options","display","setDisplay","disabled","changeOptions","StartingScreen","displayOptions","setDisplayOptions","showTop20","playerName","p","prompt","setName","prevState","setVisibility","shuffle","checkCollision","array","currentBarrel","some","barrel","randomPosition","Math","floor","random","newBarrelAtRandomPosition","barrelsWithRandomPosition","counter","i","push","url","player","a","fetch","method","headers","body","JSON","stringify","res","status","json","console","error","getDataFromTheServer","Button","resetGame","Map","setStartingBarrels","playAnimation","setPlayAnimation","setAnimation","reset","setReset","gameStatus","setGameStatus","gamesStart","setGameStart","setStatus","gameOver","setGameOver","setStyle","setPlayer","visibility","hidden","setHidden","difficulty","setShowTop20","setPosition","setNewPosition","length","setTimeout","checkGuess","e","parseInt","target","backgroundColor","parentElement","firstChild","sendResultToTheServer","then","confirm","bool","getDataFromTheServerAndSetTop20","useCallback","data","item","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1ead718.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/barrel3.2efe95e2.png\";","import image from '../assets/barrel3.png';\r\n\r\nfunction Barrel({ position, go, name, animation }) {\r\n  return (\r\n    <img\r\n      src={image}\r\n      alt='barrel'\r\n      onClick={go}\r\n      style={{\r\n        top: position.top,\r\n        left: position.left,\r\n        animation: animation,\r\n      }}\r\n      className='barrel'\r\n      name={name}\r\n    ></img>\r\n  );\r\n}\r\n\r\nexport default Barrel;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction LeaderBoard(props) {\r\n  const [top20, setTop20] = useState(props.top);\r\n\r\n  useEffect(() => {\r\n    setTop20(props.top);\r\n  }, [props.top]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Top 20</h2>\r\n      <ul id=\"leader-board\">\r\n        {top20.map((user) => {\r\n          return (\r\n            <li key={user._id}>\r\n              <b>{user.name}</b> {user.score}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <button onClick={() => props.displayTop20(false)}>Back</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LeaderBoard;\r\n","function Difficulty(props) {\r\n  const border = 'solid black 3px';\r\n  return (\r\n    <div className='starting-screen'>\r\n      <h2>Difficulty</h2>\r\n      <div className='difficulty'>\r\n        <button\r\n          style={props.style.easy}\r\n          onClick={() => {\r\n            props.startingBarrels(3);\r\n            props.borders({ easy: { border: border } });\r\n            props.setDifficulty(1);\r\n          }}\r\n        >\r\n          Easy\r\n        </button>\r\n        <button\r\n          style={props.style.normal}\r\n          onClick={() => {\r\n            props.startingBarrels(6);\r\n            props.borders({ normal: { border: border } });\r\n            props.setDifficulty(2);\r\n          }}\r\n        >\r\n          Normal\r\n        </button>\r\n        <button\r\n          style={props.style.hard}\r\n          onClick={() => {\r\n            props.startingBarrels(10);\r\n            props.borders({ hard: { border: border } });\r\n            props.setDifficulty(3);\r\n          }}\r\n        >\r\n          Hard\r\n        </button>\r\n        <button onClick={() => props.changeDisplay(true)}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Difficulty;\r\n","import { useState } from 'react';\r\nimport Difficulty from './Difficulty';\r\n\r\nfunction Options(props) {\r\n  const [display, setDisplay] = useState(true);\r\n\r\n  const render = (\r\n    <div className='starting-screen'>\r\n      <h2>Options</h2>\r\n      <button onClick={() => setDisplay(false)}>Difficulty</button>\r\n      <button disabled>Sound</button>\r\n      <button disabled>Graphics</button>\r\n      <button onClick={() => props.changeOptions(false)}>Back</button>\r\n    </div>\r\n  );\r\n\r\n  return display ? (\r\n    render\r\n  ) : (\r\n    <Difficulty\r\n      changeDisplay={setDisplay}\r\n      startingBarrels={props.startingBarrels}\r\n      borders={props.borders}\r\n      style={props.style}\r\n      setDifficulty={props.setDifficulty}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Options;\r\n","import { useState } from 'react';\r\nimport LeaderBoard from './LeaderBoard';\r\nimport Options from './Options';\r\n\r\nfunction StartingScreen(props) {\r\n  const [displayOptions, setDisplayOptions] = useState(false);\r\n\r\n  function render() {\r\n    if (displayOptions) {\r\n      return (\r\n        <Options\r\n          changeOptions={setDisplayOptions}\r\n          startingBarrels={props.startingBarrels}\r\n          borders={props.borders}\r\n          style={props.style}\r\n          setDifficulty={props.setDifficulty}\r\n        />\r\n      );\r\n    } else if (props.showTop20) {\r\n      return <LeaderBoard top={props.top} displayTop20={props.displayTop20} />;\r\n    } else {\r\n      return (\r\n        <div className='starting-screen'>\r\n          <button\r\n            onClick={() => {\r\n              let playerName;\r\n              if (!props.playerName) {\r\n                const p = prompt('Enter nickname');\r\n                p ? (playerName = p) : (playerName = 'Guest');\r\n                props.setName((prevState) => {\r\n                  return { ...prevState, name: playerName };\r\n                });\r\n              }\r\n              props.setVisibility(true);\r\n              props.shuffle();\r\n            }}\r\n          >\r\n            Start game\r\n          </button>\r\n          <button onClick={() => props.displayTop20(true)}>Top 20</button>\r\n          <button onClick={() => setDisplayOptions(true)}>Options</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  return render();\r\n}\r\n\r\nexport default StartingScreen;\r\n","export default function checkCollision(array, currentBarrel) {\r\n  const width = 50;\r\n  const height = 50;\r\n  if (\r\n    array.some((barrel) => {\r\n      return (\r\n        currentBarrel.left < barrel.left + width &&\r\n        currentBarrel.left + width > barrel.left &&\r\n        currentBarrel.top < barrel.top + height &&\r\n        currentBarrel.top + height > barrel.top\r\n      );\r\n    })\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","export default function randomPosition() {\r\n  return {\r\n    top: Math.floor(Math.random() * 450),\r\n    left: Math.floor(Math.random() * 450),\r\n  };\r\n}\r\n","import checkCollision from './checkCollision';\r\nimport randomPosition from './randomPosition';\r\n\r\nexport default function newBarrelAtRandomPosition(array = []) {\r\n  let barrel = randomPosition();\r\n  while (checkCollision(array, barrel)) {\r\n    barrel = randomPosition();\r\n  }\r\n  return barrel;\r\n}\r\n","import newBarrelAtRandomPosition from './newBarrelAtRandomPosition';\r\n\r\nexport default function barrelsWithRandomPosition(counter) {\r\n  const array = [];\r\n  for (let i = 0; i < counter; i++) {\r\n    array.push(newBarrelAtRandomPosition(array));\r\n  }\r\n  return array;\r\n}\r\n","const url =\r\n  process.env.NODE_ENV === 'development' ? 'http://localhost:5000/api' : '/api';\r\nexport async function sendResultToTheServer(player) {\r\n  try {\r\n    const res = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(player),\r\n    });\r\n    if (res.status === 201) {\r\n      return await res.json();\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function getDataFromTheServer() {\r\n  try {\r\n    const res = await fetch(url);\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","export default function Button({ resetGame }) {\r\n  return <button onClick={resetGame}>New Game</button>;\r\n}\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport './style.css';\r\nimport Barrel from './Barrel';\r\nimport StartingScreen from './StartingScreen';\r\nimport LeaderBoard from './LeaderBoard';\r\nimport barrelsWithRandomPosition from '../functions/barrelsWithRandomPosition';\r\nimport newBarrelAtRandomPosition from '../functions/newBarrelAtRandomPosition';\r\nimport { getDataFromTheServer, sendResultToTheServer } from '../api/api';\r\nimport Button from './Button';\r\n\r\nfunction Map() {\r\n  const [startingBarrels, setStartingBarrels] = useState(3);\r\n  const [playAnimation, setPlayAnimation] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const [reset, setReset] = useState(false);\r\n  const [gameStatus, setGameStatus] = useState(false);\r\n  const [gamesStart, setGameStart] = useState(false);\r\n  const [status, setStatus] = useState('Find the funny barrel!');\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [style, setStyle] = useState({\r\n    easy: { border: 'solid black 3px' },\r\n    normal: {},\r\n    hard: {},\r\n  });\r\n  const [player, setPlayer] = useState({\r\n    name: '',\r\n    score: 0,\r\n  });\r\n  const [hidden, setHidden] = useState({\r\n    visibility: 'hidden',\r\n  });\r\n  const [difficulty, setDifficulty] = useState(1);\r\n  const [top20, setTop20] = useState([]);\r\n  const [showTop20, setShowTop20] = useState(false);\r\n  const [position, setPosition] = useState(\r\n    barrelsWithRandomPosition(startingBarrels),\r\n  );\r\n\r\n  function setNewPosition() {\r\n    setPosition((prevState) => barrelsWithRandomPosition(prevState.length));\r\n  }\r\n\r\n  function shuffle() {\r\n    setPlayAnimation(true);\r\n    setGameStart(true);\r\n    setStatus('Find the funny barrel!');\r\n    for (let i = 0; i < startingBarrels; i++) {\r\n      setTimeout(setNewPosition, (3 + i) * 1000);\r\n    }\r\n    setTimeout(() => setGameStatus(true), (startingBarrels + 3) * 1000);\r\n    setTimeout(() => setPlayAnimation(false), 3000);\r\n  }\r\n\r\n  function checkGuess(e) {\r\n    // if guess is correct\r\n    if (parseInt(e.target.name) === 0) {\r\n      setStatus('Correct!');\r\n      setGameStatus(false);\r\n      // add a new barrel with no collission\r\n      setPosition((prevState) => [\r\n        ...prevState,\r\n        newBarrelAtRandomPosition(prevState),\r\n      ]);\r\n      setPlayer((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          score: (player.score += position.length * difficulty),\r\n        };\r\n      });\r\n      shuffle();\r\n    } else {\r\n      // if guess is wrong\r\n      e.target.style.backgroundColor = 'red';\r\n      e.target.parentElement.firstChild.style.backgroundColor = 'yellow';\r\n      setStatus('You lose!');\r\n      setGameStatus(false);\r\n      setGameOver(true);\r\n      sendResultToTheServer(player).then((res) => (res ? setTop20(res) : null));\r\n      setTimeout(() => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        if (confirm('Show top 20?')) {\r\n          setShowTop20(true);\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  function resetGame() {\r\n    setGameStatus(false);\r\n    setGameStart(false);\r\n    setPosition(barrelsWithRandomPosition(startingBarrels));\r\n    setStatus('Find the funny barrel!');\r\n    setReset(!reset);\r\n    setVisibility(false);\r\n    setPlayer((prevState) => {\r\n      return { ...prevState, score: 0 };\r\n    });\r\n    setGameOver(false);\r\n    setShowTop20(false);\r\n  }\r\n\r\n  function setVisibility(bool) {\r\n    return bool\r\n      ? setHidden({ visibility: '' })\r\n      : setHidden({ visibility: 'hidden' });\r\n  }\r\n\r\n  const getDataFromTheServerAndSetTop20 = useCallback(async () => {\r\n    const data = await getDataFromTheServer();\r\n    setTop20(data);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setPosition(barrelsWithRandomPosition(startingBarrels));\r\n  }, [startingBarrels]);\r\n\r\n  useEffect(() => {\r\n    playAnimation\r\n      ? setAnimation('blink 0.5s 6 alternate ease-in-out')\r\n      : setAnimation('');\r\n  }, [playAnimation]);\r\n\r\n  useEffect(() => {\r\n    getDataFromTheServerAndSetTop20();\r\n  }, [getDataFromTheServerAndSetTop20]);\r\n\r\n  function render() {\r\n    if (showTop20) {\r\n      return <LeaderBoard top={top20} displayTop20={setShowTop20} />;\r\n    } else if (gamesStart) {\r\n      return position.map((item, index) =>\r\n        index === 0 ? (\r\n          <Barrel\r\n            key={index}\r\n            position={position[index]}\r\n            go={gameStatus ? checkGuess : null}\r\n            name={index}\r\n            animation={animation}\r\n          />\r\n        ) : (\r\n          <Barrel\r\n            key={index}\r\n            position={position[index]}\r\n            go={gameStatus ? checkGuess : null}\r\n            name={index}\r\n          />\r\n        ),\r\n      );\r\n    } else {\r\n      return (\r\n        <StartingScreen\r\n          shuffle={shuffle}\r\n          startingBarrels={setStartingBarrels}\r\n          borders={setStyle}\r\n          style={style}\r\n          setName={setPlayer}\r\n          setVisibility={setVisibility}\r\n          playerName={player.name}\r\n          setDifficulty={setDifficulty}\r\n          top={top20}\r\n          showTop20={showTop20}\r\n          displayTop20={setShowTop20}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>{status}</h2>\r\n      <h2 style={hidden}>{`${player.name} Score: ${player.score}`}</h2>\r\n      <div id='map'>{render()}</div>\r\n      {(gameStatus || gameOver) && (\r\n        <Button\r\n          gameStatus={gameStatus}\r\n          gameOver={gameOver}\r\n          resetGame={resetGame}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Map from './components/Map';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Map />\r\n  </React.StrictMode>,\r\n  document.getElementById('grid'),\r\n);\r\n"],"sourceRoot":""}