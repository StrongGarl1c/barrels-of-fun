{"version":3,"sources":["barrel3.png","Barrel.js","LeaderBoard.js","Difficulty.js","Options.js","StartingScreen.js","Map.js","index.js"],"names":["Barrel","position","go","name","animation","src","image","alt","onClick","style","top","left","className","LeaderBoard","props","useState","top20","setTop20","useEffect","id","map","user","score","_id","displayTop20","Difficulty","border","easy","e","gameDifficulty","borders","setDif","normal","hard","changeDisplay","Options","display","setDisplay","disabled","changeOptions","StartingScreen","displayOptions","setDisplayOptions","bool","showTop20","playerName","p","prompt","setName","setVisibility","shuffle","Map","startingBarrels","setStartingBarrels","playAnimation","setPlayAnimation","setAnimation","reset","setReset","gameStatus","setGameStatus","gamesStart","setGameStart","status","setStatus","gameOver","setGameOver","setStyle","player","setPlayer","visibility","hidden","setHidden","difficulty","setDifficulty","setShowTop20","fillArray","useCallback","Array","fill","Math","floor","random","item","setPosition","set","prevState","i","setTimeout","parseInt","target","length","backgroundColor","parentElement","firstChild","a","fetch","method","headers","body","JSON","stringify","response","json","data","console","error","confirm","resetGame","diff","obj","numb","getData","res","index","button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd6e9466.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/barrel3.2efe95e2.png\";","import image from './barrel3.png';\r\n\r\nfunction Barrel({ position, go, name, animation }) {\r\n  return (\r\n    <img\r\n      src={image}\r\n      alt=\"barrel\"\r\n      onClick={go}\r\n      style={{\r\n        top: position.top,\r\n        left: position.left,\r\n        animation: animation,\r\n      }}\r\n      className=\"barrel\"\r\n      name={name}\r\n    ></img>\r\n  );\r\n}\r\n\r\nexport default Barrel;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction LeaderBoard(props) {\r\n  const [top20, setTop20] = useState(props.top);\r\n\r\n  useEffect(() => {\r\n    setTop20(props.top);\r\n  }, [props.top]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Top 20</h2>\r\n      <ul id=\"leader-board\">\r\n        {top20.map((user) => {\r\n          return (\r\n            <li key={user._id}>\r\n              <b>{user.name}</b> {user.score}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <button onClick={() => props.displayTop20(false)}>Назад</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LeaderBoard;\r\n","function Difficulty(props) {\r\n  const border = 'solid black 3px';\r\n  return (\r\n    <div className=\"starting-screen\">\r\n      <h2>Сложность</h2>\r\n      <div className=\"difficulty\">\r\n        <button\r\n          style={props.style.easy}\r\n          onClick={(e) => {\r\n            props.gameDifficulty(3);\r\n            props.borders({ easy: { border: border } });\r\n            props.setDif(1);\r\n          }}\r\n        >\r\n          Легкая\r\n        </button>\r\n        <button\r\n          style={props.style.normal}\r\n          onClick={(e) => {\r\n            props.gameDifficulty(6);\r\n            props.borders({ normal: { border: border } });\r\n            props.setDif(2);\r\n          }}\r\n        >\r\n          Нормальная\r\n        </button>\r\n        <button\r\n          style={props.style.hard}\r\n          onClick={(e) => {\r\n            props.gameDifficulty(10);\r\n            props.borders({ hard: { border: border } });\r\n            props.setDif(3);\r\n          }}\r\n        >\r\n          Сложная\r\n        </button>\r\n        <button onClick={() => props.changeDisplay()}>Назад</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Difficulty;\r\n","import { useState } from 'react';\r\nimport Difficulty from './Difficulty';\r\n\r\nfunction Options(props) {\r\n  const [display, setDisplay] = useState(true);\r\n\r\n  function changeDisplay() {\r\n    setDisplay(true);\r\n  }\r\n\r\n  const render = (\r\n    <div className=\"starting-screen\">\r\n      <h2>Опции</h2>\r\n      <button onClick={() => setDisplay(false)}>Сложность</button>\r\n      <button disabled>Звук</button>\r\n      <button disabled>Изображение</button>\r\n      <button onClick={() => props.changeOptions(false)}>Назад</button>\r\n    </div>\r\n  );\r\n\r\n  return display ? (\r\n    render\r\n  ) : (\r\n    <Difficulty\r\n      changeDisplay={changeDisplay}\r\n      gameDifficulty={props.gameDifficulty}\r\n      borders={props.borders}\r\n      style={props.style}\r\n      setDif={props.setDif}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Options;\r\n","import { useState } from 'react';\r\nimport LeaderBoard from './LeaderBoard';\r\nimport Options from './Options';\r\n\r\nfunction StartingScreen(props) {\r\n  const [displayOptions, setDisplayOptions] = useState(false);\r\n\r\n  function changeOptions(bool) {\r\n    setDisplayOptions(bool);\r\n  }\r\n\r\n  function render() {\r\n    if (displayOptions) {\r\n      return (\r\n        <Options\r\n          changeOptions={changeOptions}\r\n          gameDifficulty={props.gameDifficulty}\r\n          borders={props.borders}\r\n          style={props.style}\r\n          setDif={props.setDif}\r\n        />\r\n      );\r\n    } else if (props.showTop20) {\r\n      return <LeaderBoard top={props.top} displayTop20={props.displayTop20} />;\r\n    } else {\r\n      return (\r\n        <div className=\"starting-screen\">\r\n          <button\r\n            onClick={() => {\r\n              let playerName;\r\n              if (!props.playerName) {\r\n                const p = prompt('Введите ник');\r\n                p ? (playerName = p) : (playerName = 'Гость');\r\n                props.setName(playerName);\r\n              }\r\n              props.setVisibility(true);\r\n              props.shuffle();\r\n            }}\r\n          >\r\n            Начать игру\r\n          </button>\r\n          <button onClick={() => props.displayTop20(true)}>Топ 20</button>\r\n          <button onClick={() => changeOptions(true)}>Опции</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  return render();\r\n}\r\n\r\nexport default StartingScreen;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport './style.css';\r\nimport Barrel from './Barrel';\r\nimport StartingScreen from './StartingScreen';\r\nimport LeaderBoard from './LeaderBoard';\r\n\r\nfunction Map() {\r\n  const [startingBarrels, setStartingBarrels] = useState(3);\r\n  const [playAnimation, setPlayAnimation] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const [reset, setReset] = useState(false);\r\n  const [gameStatus, setGameStatus] = useState(false);\r\n  const [gamesStart, setGameStart] = useState(false);\r\n  const [status, setStatus] = useState('Найди веселую бочку!');\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [style, setStyle] = useState({\r\n    easy: { border: 'solid black 3px' },\r\n    normal: {},\r\n    hard: {},\r\n  });\r\n  const [player, setPlayer] = useState({\r\n    name: '',\r\n    score: 0,\r\n  });\r\n  const [hidden, setHidden] = useState({\r\n    visibility: 'hidden',\r\n  });\r\n  const [difficulty, setDifficulty] = useState(1);\r\n  const [top20, setTop20] = useState([]);\r\n  const [showTop20, setShowTop20] = useState(false);\r\n\r\n  const fillArray = useCallback(\r\n    function () {\r\n      return Array(startingBarrels)\r\n        .fill({\r\n          top: Math.floor(Math.random() * 450),\r\n          left: Math.floor(Math.random() * 450),\r\n        })\r\n        .map((item) => {\r\n          return {\r\n            top: Math.floor(Math.random() * 450),\r\n            left: Math.floor(Math.random() * 450),\r\n          };\r\n        });\r\n    },\r\n    [startingBarrels],\r\n  );\r\n\r\n  const [position, setPosition] = useState(fillArray());\r\n\r\n  function set() {\r\n    setPosition((prevState) => {\r\n      return prevState.map((item) => {\r\n        return {\r\n          top: Math.floor(Math.random() * (450 - item.top)),\r\n          left: Math.floor(Math.random() * (450 - item.left)),\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  function shuffle() {\r\n    setPlayAnimation(true);\r\n    setGameStart(true);\r\n    setStatus('Найди веселую бочку!');\r\n    let i = 0;\r\n    for (i; i < startingBarrels; i++) {\r\n      setTimeout(set, (3 + i) * 1000);\r\n    }\r\n    setTimeout(() => setGameStatus(true), (startingBarrels + 3) * 1000);\r\n    setTimeout(() => setPlayAnimation(false), 3000);\r\n  }\r\n\r\n  function go(e) {\r\n    if (parseInt(e.target.name) === 0) {\r\n      setStatus('Угадал!');\r\n      setGameStatus(false);\r\n      setPosition((prevState) => [\r\n        ...prevState,\r\n        {\r\n          top: Math.floor(Math.random() * 450),\r\n          left: Math.floor(Math.random() * 450),\r\n        },\r\n      ]);\r\n      setPlayer((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          score: (player.score += position.length * difficulty),\r\n        };\r\n      });\r\n      shuffle();\r\n    } else {\r\n      e.target.style.backgroundColor = 'red';\r\n      e.target.parentElement.firstChild.style.backgroundColor = 'yellow';\r\n      setStatus('Ты проиграл!');\r\n      setGameStatus(false);\r\n      setGameOver(true);\r\n      (async function () {\r\n        try {\r\n          const response = await fetch('/api', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(player),\r\n          });\r\n          const data = await response.json();\r\n          setTop20(data);\r\n          // setShowTop20(true);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      })();\r\n      setTimeout(() => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        if (confirm('Показать топ 20?')) {\r\n          setShowTop20(true);\r\n        }\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  function resetGame() {\r\n    setGameStatus(false);\r\n    setGameStart(false);\r\n    setPosition(fillArray());\r\n    setStatus('Найди веселую бочку!');\r\n    setReset(!reset);\r\n    setVisibility(false);\r\n    setPlayer((prevState) => {\r\n      return { ...prevState, score: 0 };\r\n    });\r\n    setGameOver(false);\r\n    setShowTop20(false);\r\n  }\r\n\r\n  function gameDifficulty(diff) {\r\n    setStartingBarrels(diff);\r\n  }\r\n\r\n  function button() {\r\n    if (gameStatus || gameOver) {\r\n      return <button onClick={resetGame}>Новая Игра</button>;\r\n    }\r\n  }\r\n\r\n  function borders(obj) {\r\n    setStyle(obj);\r\n  }\r\n\r\n  function setName(name) {\r\n    setPlayer((prevState) => {\r\n      return { ...prevState, name: name };\r\n    });\r\n  }\r\n\r\n  function setVisibility(bool) {\r\n    return bool\r\n      ? setHidden({ visibility: '' })\r\n      : setHidden({ visibility: 'hidden' });\r\n  }\r\n\r\n  function setDif(numb) {\r\n    setDifficulty(numb);\r\n  }\r\n\r\n  const getData = useCallback(async () => {\r\n    try {\r\n      const res = await fetch('/api');\r\n      const data = await res.json();\r\n      setTop20(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, []);\r\n\r\n  function displayTop20(bool) {\r\n    setShowTop20(bool);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPosition(fillArray());\r\n  }, [startingBarrels, fillArray]);\r\n\r\n  useEffect(() => {\r\n    playAnimation\r\n      ? setAnimation('blink 0.5s 6 alternate ease-in-out')\r\n      : setAnimation('');\r\n  }, [playAnimation]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  function render() {\r\n    if (showTop20) {\r\n      return <LeaderBoard top={top20} displayTop20={displayTop20} />;\r\n    } else if (gamesStart) {\r\n      return position.map((item, index) =>\r\n        index === 0 ? (\r\n          <Barrel\r\n            key={index}\r\n            position={position[index]}\r\n            go={gameStatus ? go : null}\r\n            name={index}\r\n            animation={animation}\r\n          />\r\n        ) : (\r\n          <Barrel\r\n            key={index}\r\n            position={position[index]}\r\n            go={gameStatus ? go : null}\r\n            name={index}\r\n          />\r\n        ),\r\n      );\r\n    } else {\r\n      return (\r\n        <StartingScreen\r\n          shuffle={shuffle}\r\n          gameDifficulty={gameDifficulty}\r\n          borders={borders}\r\n          style={style}\r\n          setName={setName}\r\n          setVisibility={setVisibility}\r\n          playerName={player.name}\r\n          setDif={setDif}\r\n          top={top20}\r\n          showTop20={showTop20}\r\n          displayTop20={displayTop20}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>{status}</h2>\r\n      <h2 style={hidden}>{`${player.name} Очки: ${player.score}`}</h2>\r\n      <div id=\"map\">{render()}</div>\r\n      {button()}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Map from './Map';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Map />\r\n  </React.StrictMode>,\r\n  document.getElementById('grid'),\r\n);\r\n"],"sourceRoot":""}